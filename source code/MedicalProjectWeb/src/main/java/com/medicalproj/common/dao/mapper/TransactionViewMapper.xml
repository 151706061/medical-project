<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.medicalproj.common.dao.TransactionViewMapper" >
  <resultMap id="BaseResultMap" type="com.medicalproj.common.domain.TransactionView" >
    <result column="TRANS_ID" property="transId" jdbcType="INTEGER" />
    <result column="TRANS_TIME_ORIGIN" property="transTimeOrigin" jdbcType="TIMESTAMP" />
    <result column="TRANS_TIME" property="transTime" jdbcType="VARCHAR" />
    <result column="TRANS_AMOUNT" property="transAmount" jdbcType="VARCHAR" />
    <result column="TRANS_DESC" property="transDesc" jdbcType="VARCHAR" />
    <result column="OWNER_USER_ID" property="ownerUserId" jdbcType="INTEGER" />
    <result column="TRANS_TYPE" property="transType" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    TRANS_ID, TRANS_TIME_ORIGIN, TRANS_TIME, TRANS_AMOUNT, TRANS_DESC, OWNER_USER_ID, 
    TRANS_TYPE
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.medicalproj.common.domain.TransactionViewExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from vw_transaction
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <delete id="deleteByExample" parameterType="com.medicalproj.common.domain.TransactionViewExample" >
    delete from vw_transaction
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.medicalproj.common.domain.TransactionView" >
    insert into vw_transaction (TRANS_ID, TRANS_TIME_ORIGIN, TRANS_TIME, 
      TRANS_AMOUNT, TRANS_DESC, OWNER_USER_ID, 
      TRANS_TYPE)
    values (#{transId,jdbcType=INTEGER}, #{transTimeOrigin,jdbcType=TIMESTAMP}, #{transTime,jdbcType=VARCHAR}, 
      #{transAmount,jdbcType=VARCHAR}, #{transDesc,jdbcType=VARCHAR}, #{ownerUserId,jdbcType=INTEGER}, 
      #{transType,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.medicalproj.common.domain.TransactionView" >
    insert into vw_transaction
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="transId != null" >
        TRANS_ID,
      </if>
      <if test="transTimeOrigin != null" >
        TRANS_TIME_ORIGIN,
      </if>
      <if test="transTime != null" >
        TRANS_TIME,
      </if>
      <if test="transAmount != null" >
        TRANS_AMOUNT,
      </if>
      <if test="transDesc != null" >
        TRANS_DESC,
      </if>
      <if test="ownerUserId != null" >
        OWNER_USER_ID,
      </if>
      <if test="transType != null" >
        TRANS_TYPE,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="transId != null" >
        #{transId,jdbcType=INTEGER},
      </if>
      <if test="transTimeOrigin != null" >
        #{transTimeOrigin,jdbcType=TIMESTAMP},
      </if>
      <if test="transTime != null" >
        #{transTime,jdbcType=VARCHAR},
      </if>
      <if test="transAmount != null" >
        #{transAmount,jdbcType=VARCHAR},
      </if>
      <if test="transDesc != null" >
        #{transDesc,jdbcType=VARCHAR},
      </if>
      <if test="ownerUserId != null" >
        #{ownerUserId,jdbcType=INTEGER},
      </if>
      <if test="transType != null" >
        #{transType,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.medicalproj.common.domain.TransactionViewExample" resultType="java.lang.Integer" >
    select count(*) from vw_transaction
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update vw_transaction
    <set >
      <if test="record.transId != null" >
        TRANS_ID = #{record.transId,jdbcType=INTEGER},
      </if>
      <if test="record.transTimeOrigin != null" >
        TRANS_TIME_ORIGIN = #{record.transTimeOrigin,jdbcType=TIMESTAMP},
      </if>
      <if test="record.transTime != null" >
        TRANS_TIME = #{record.transTime,jdbcType=VARCHAR},
      </if>
      <if test="record.transAmount != null" >
        TRANS_AMOUNT = #{record.transAmount,jdbcType=VARCHAR},
      </if>
      <if test="record.transDesc != null" >
        TRANS_DESC = #{record.transDesc,jdbcType=VARCHAR},
      </if>
      <if test="record.ownerUserId != null" >
        OWNER_USER_ID = #{record.ownerUserId,jdbcType=INTEGER},
      </if>
      <if test="record.transType != null" >
        TRANS_TYPE = #{record.transType,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update vw_transaction
    set TRANS_ID = #{record.transId,jdbcType=INTEGER},
      TRANS_TIME_ORIGIN = #{record.transTimeOrigin,jdbcType=TIMESTAMP},
      TRANS_TIME = #{record.transTime,jdbcType=VARCHAR},
      TRANS_AMOUNT = #{record.transAmount,jdbcType=VARCHAR},
      TRANS_DESC = #{record.transDesc,jdbcType=VARCHAR},
      OWNER_USER_ID = #{record.ownerUserId,jdbcType=INTEGER},
      TRANS_TYPE = #{record.transType,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <select resultMap="BaseResultMap" parameterType="com.medicalproj.common.domain.TransactionViewExample" id="selectByExampleWithRowbounds" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from vw_transaction
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
</mapper>